version: '3'

volumes:
  mysql2:
#  postgresql_apicurio:
  mongo_data2: {}

services:

  #KEYCLOAK FILE
  jboss-keycloak-mysql:
    image: 'percona:5.7'
    environment:
      MYSQL_DATABASE: ${KC_SQL_DATABASE}
      MYSQL_ROOT_PASSWORD: ${KC_SQL_ROOT_PASSWORD}
      MYSQL_USER: ${KC_SQL_USER}
      MYSQL_PASSWORD: ${KC_SQL_PASSWORD}
    volumes:
      - 'mysql2:/var/lib/mysql'

  jboss-keycloak:
    image: 'as-keycloak'
    build: ./keycloak
    depends_on: [jboss-keycloak-mysql]
    ports:
      - '8090:8080'
    volumes:
      - ./config/keycloak:/microcks-keycloak-config
    environment:
      JDBC_PARAMS: "useSSL=false"
      KEYCLOAK_USER: ${KEYCLOAK_USER}
      KEYCLOAK_PASSWORD: ${KEYCLOAK_PASSWORD}
      KEYCLOAK_IMPORT: /microcks-keycloak-config/apicurio-realm.json,/microcks-keycloak-config/microcks-realm.json,/microcks-keycloak-config/registry-realm.json

      DB_VENDOR: ${DB_VENDOR}
      DB_ADDR: ${DB_ADDR}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}

  mongo:
    image: mongo:3.4.23
    container_name: microcks-mongo
    volumes:
      - "mongo_data2:/data/db"

#  postman:
#    image: microcks/microcks-postman-runtime:latest
#    container_name: microcks-postman-runtime
#
#  #MICROCKS FILE
#  microcks:
#    depends_on:
#      - mongo
#      - postman
#      - jboss-keycloak
#    image: microcks/microcks:latest
#    container_name: microcks
#    volumes:
#      - ./config:/deployments/config
#    ports:
#      - "8900:8080"
#    environment:
#      SPRING_PROFILES_ACTIVE: ${MR_SPRING_PROFILES_ACTIVE}
#      SPRING_DATA_MONGODB_URI: ${MR_SPRING_DATA_MONGODB_URI}
#      SPRING_DATA_MONGODB_DATABASE: ${MR_SPRING_DATA_MONGODB_DATABASE}
#      POSTMAN_RUNNER_URL: ${MR_POSTMAN_RUNNER_URL}
#      TEST_CALLBACK_URL: ${MR_TEST_CALLBACK_URL}
#      KEYCLOAK_URL: ${MR_KEYCLOAK_URL}

  postgres:
    image: postgres
    ports:
      - 5432:5432
    environment:
      POSTGRES_USER: apicurio-registry
      POSTGRES_PASSWORD: password
    volumes:
      - ./postgresql_apicurio:/var/lib/postgresql/data
      - ./create-database.sql:/docker-entrypoint-initdb.d/create-database.sql

  apicurio-registry:
    image: apicurio/apicurio-registry-sql:latest-release
    ports:
      - 8080:8080
    environment:
      REGISTRY_DATASOURCE_URL: 'jdbc:postgresql://postgres/apicurio-registry'
      REGISTRY_DATASOURCE_USERNAME: apicurio-registry
      REGISTRY_DATASOURCE_PASSWORD: password
      AUTH_ENABLED: ${AUTH_ENABLED}
      KEYCLOAK_URL: ${APICURIO_KC_AUTH_URL}
      KEYCLOAK_REALM: registry
      KEYCLOAK_API_CLIENT_ID: ${KEYCLOAK_API_CLIENT_ID}
      KEYCLOAK_UI_CLIENT_ID: ${KEYCLOAK_UI_CLIENT_ID}
    depends_on:
      - postgres
